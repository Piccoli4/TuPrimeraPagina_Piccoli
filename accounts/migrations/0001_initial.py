# Generated by Django 5.2.1 on 2025-06-12 22:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionEstudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estudio', models.CharField(default='Pilates Gravity', max_length=100, verbose_name='Nombre del estudio')),
                ('direccion', models.TextField(blank=True, verbose_name='Dirección del estudio')),
                ('telefono_contacto', models.CharField(blank=True, max_length=20, verbose_name='Teléfono de contacto')),
                ('email_contacto', models.EmailField(blank=True, max_length=254, verbose_name='Email de contacto')),
                ('horas_anticipacion_cancelacion', models.PositiveIntegerField(default=12, help_text='Número de horas de anticipación requeridas para cancelar una reserva', verbose_name='Horas de anticipación para cancelar')),
                ('max_reservas_por_usuario', models.PositiveIntegerField(default=3, help_text='Número máximo de reservas activas que puede tener un usuario', verbose_name='Máximo de reservas activas por usuario')),
                ('enviar_recordatorios', models.BooleanField(default=True, help_text='Enviar recordatorios por email antes de las clases', verbose_name='Enviar recordatorios de clase')),
                ('horas_antes_recordatorio', models.PositiveIntegerField(default=24, help_text='Cuántas horas antes de la clase enviar el recordatorio', verbose_name='Horas antes para enviar recordatorio')),
                ('mensaje_bienvenida', models.TextField(blank=True, help_text='Mensaje que aparece en la página principal', verbose_name='Mensaje de bienvenida')),
                ('activo', models.BooleanField(default=True, verbose_name='Configuración activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración del Estudio',
                'verbose_name_plural': 'Configuración del Estudio',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono', models.CharField(blank=True, help_text='Número de teléfono para contacto (opcional)', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='El teléfono debe tener entre 9 y 15 dígitos. Puede incluir + al inicio.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono')),
                ('fecha_nacimiento', models.DateField(blank=True, help_text='Fecha de nacimiento (opcional)', null=True, verbose_name='Fecha de nacimiento')),
                ('tiene_lesiones', models.BooleanField(default=False, help_text='Marcar si tiene lesiones o condiciones que debamos conocer', verbose_name='¿Tienes alguna lesión o condición médica?')),
                ('descripcion_lesiones', models.TextField(blank=True, help_text='Describe brevemente cualquier lesión o condición médica relevante', max_length=500, verbose_name='Descripción de lesiones/condiciones')),
                ('nivel_experiencia', models.CharField(choices=[('principiante', 'Principiante'), ('intermedio', 'Intermedio'), ('avanzado', 'Avanzado'), ('instructor', 'Instructor/Profesional')], default='principiante', max_length=15, verbose_name='Nivel de experiencia en Pilates')),
                ('acepta_marketing', models.BooleanField(default=False, help_text='Marcar para recibir emails sobre promociones y eventos especiales', verbose_name='Acepto recibir información promocional')),
                ('acepta_recordatorios', models.BooleanField(default=True, help_text='Marcar para recibir recordatorios de tus clases reservadas', verbose_name='Acepto recibir recordatorios de clases')),
                ('fecha_primera_clase', models.DateField(blank=True, help_text='Fecha en que tomó su primera clase en el estudio', null=True, verbose_name='Fecha de primera clase')),
                ('notas_admin', models.TextField(blank=True, help_text='Notas internas del estudio (solo visible para administradores)', max_length=1000, verbose_name='Notas administrativas')),
                ('avatar', models.ImageField(blank=True, help_text='Foto de perfil opcional (se redimensionará automáticamente)', null=True, upload_to='avatars/', verbose_name='Foto de perfil')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación del perfil')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última actualización del perfil')),
                ('perfil_completado', models.BooleanField(default=False, help_text='Indica si el usuario ha completado su información de perfil', verbose_name='Perfil completado')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
                'ordering': ['-fecha_creacion'],
            },
        ),
    ]
